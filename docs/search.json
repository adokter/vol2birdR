[{"path":"/articles/package.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Using vol2birdR","text":"vol2birdR package provides necessary functions process radar data. package can also use libtorch utilize machine learning processing radar data. documentation gives brief introduction use vol2birdR. information just type: library(help=vol2birdR)","code":""},{"path":[]},{"path":"/articles/package.html","id":"mistnet","dir":"Articles","previous_headings":"Usage","what":"Mistnet","title":"Using vol2birdR","text":"Mistnet deep convolution neural net segmentating rain S-band radar data, see publication https://besjournals.onlinelibrary.wiley.com/doi/full/10.1111/2041-210X.13280. use functionality install mistnet software part running vol2birdR library. easilly done calling install_mistnet library loaded. download libtorch download section https://pytorch.org well wrapper library AWS enables mistnet functionality. mistnet model manually downloaded specified configuration instance. default location mistnet model /opt/vol2bird/etc/mistnet_nexrad.pt. can download mistnet model http://mistnet.s3.amazonaws.com/mistnet_nexrad.pt. wget http://mistnet.s3.amazonaws.com/mistnet_nexrad.pt -O \"/home/docuser/etc/mistnet_nexrad.pt\"","code":"library(vol2birdR) install_mistnet()"},{"path":"/articles/package.html","id":"processing","dir":"Articles","previous_headings":"Usage","what":"Processing","title":"Using vol2birdR","text":"Processing radar data always performed similar way. First create configuration instance modify configuration according needs. actual processor initiated processing performed. Let’s break example. First vol2birdR library loaded using library(vol2birdR) next step setup configuration required. can modified heavily best way learn read documentation config-class. example, configuration set printout verbose output torch library (mistnet) used using mistnet model downloaded earlier. final step processing performed input ODIM H5 volume, defined configuration output vertical profile polar volume.","code":"library(vol2birdR) config<-Vol2BirdConfig$new() config$verbose<-TRUE config$useMistNet<-TRUE processor<-Vol2Bird$new() processor$process(c(\"/...../volume.h5\"),config,\"vp.h5\",\"pvol.h5\") config<-Vol2BirdConfig$new() config$verbose<-TRUE config$useMistNet<-TRUE config$mistNetPath<-\"/home/docuser/etc/mistnet_nexrad.pt\""},{"path":"/articles/package.html","id":"vol2birdconfig","dir":"Articles","previous_headings":"Usage","what":"Vol2BirdConfig","title":"Using vol2birdR","text":"mentioned earlier, processing involves config instance options set. options involves everything printing certain information type processing performed. cases might necessary copy configuration instances whatever reason. cases can’t just assign instances like like , config extraconfig instances refer object. avoid , use either clone copy constructor like Copyright 2010-2021 Adriaan M. Dokter (Cornell lab Ornithology, University Amsterdam) & Netherlands eScience Centre","code":"config<-Vol2BirdConfig$new() extraconfig<-config config<-Vol2BirdConfig$new() extraconfig<-config$clone()             # Clone method otherconfig<-Vol2BirdConfig$new(config) # Copy constructor"},{"path":"/articles/vol2birdR.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Introduction to vol2birdR","text":"vol2birdR package provides necessary functions process radar data. package can also use libtorch utilize machine learning processing radar data. documentation gives brief introduction use vol2birdR. information just type: library(help=vol2birdR)","code":""},{"path":[]},{"path":"/articles/vol2birdR.html","id":"mistnet","dir":"Articles","previous_headings":"Usage","what":"Mistnet","title":"Introduction to vol2birdR","text":"Mistnet deep convolution neural net segmentating rain S-band radar data, see publication https://besjournals.onlinelibrary.wiley.com/doi/full/10.1111/2041-210X.13280. use functionality install mistnet software part running vol2birdR library. easilly done calling install_mistnet library loaded. download libtorch download section https://pytorch.org well wrapper library AWS enables mistnet functionality. mistnet model manually downloaded specified configuration instance. default location mistnet model /opt/vol2bird/etc/mistnet_nexrad.pt. can download mistnet model http://mistnet.s3.amazonaws.com/mistnet_nexrad.pt. wget http://mistnet.s3.amazonaws.com/mistnet_nexrad.pt -O \"/home/docuser/etc/mistnet_nexrad.pt\"","code":"library(vol2birdR) install_mistnet()"},{"path":"/articles/vol2birdR.html","id":"processing","dir":"Articles","previous_headings":"Usage","what":"Processing","title":"Introduction to vol2birdR","text":"Processing radar data always performed similar way. First create configuration instance modify configuration according needs. actual processor initiated processing performed. Let’s break example. First vol2birdR library loaded using library(vol2birdR) next step setup configuration required. can modified heavily best way learn read documentation config-class. example, configuration set printout verbose output torch library (mistnet) used using mistnet model downloaded earlier. final step processing performed input ODIM H5 volume, defined configuration output vertical profile polar volume.","code":"library(vol2birdR) config<-Vol2BirdConfig$new() config$verbose<-TRUE config$useMistNet<-TRUE processor<-Vol2Bird$new() processor$process(c(\"/...../volume.h5\"),config,\"vp.h5\",\"pvol.h5\") config<-Vol2BirdConfig$new() config$verbose<-TRUE config$useMistNet<-TRUE config$mistNetPath<-\"/home/docuser/etc/mistnet_nexrad.pt\""},{"path":"/articles/vol2birdR.html","id":"vol2birdconfig","dir":"Articles","previous_headings":"Usage","what":"Vol2BirdConfig","title":"Introduction to vol2birdR","text":"mentioned earlier, processing involves config instance options set. options involves everything printing certain information type processing performed. cases might necessary copy configuration instances whatever reason. cases can’t just assign instances like like , config extraconfig instances refer object. avoid , use either clone copy constructor like Copyright 2010-2021 Adriaan M. Dokter (Cornell lab Ornithology, University Amsterdam) & Netherlands eScience Centre","code":"config<-Vol2BirdConfig$new() extraconfig<-config config<-Vol2BirdConfig$new() extraconfig<-config$clone()             # Clone method otherconfig<-Vol2BirdConfig$new(config) # Copy constructor"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Anders Henja. Author. Adriaan M. Dokter. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Henja , Dokter (2022). vol2birdR: Vertical Profiles Biological Signals Weather Radar Data. https://github.com/adokter/vol2birdR/, https://adriaandokter.com/vol2bird/.","code":"@Manual{,   title = {vol2birdR: Vertical Profiles of Biological Signals in Weather Radar Data},   author = {Anders Henja and Adriaan M. Dokter},   year = {2022},   note = {https://github.com/adokter/vol2birdR/, https://adriaandokter.com/vol2bird/}, }"},{"path":"/index.html","id":"vol2birdr","dir":"","previous_headings":"","what":"Vertical Profiles of Biological Signals in Weather Radar Data","title":"Vertical Profiles of Biological Signals in Weather Radar Data","text":"Enables vol2bird R.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Vertical Profiles of Biological Signals in Weather Radar Data","text":"vol2BirdR available major platforms, namely Linux, OS X Windows. package depends GSL, PROJ HDF5.","code":""},{"path":"/index.html","id":"system-requirements","dir":"","previous_headings":"Installation","what":"System Requirements","title":"Vertical Profiles of Biological Signals in Weather Radar Data","text":"OS X Linux GNU Scientific Library (GSL), PROJ HDF5 need installed.","code":""},{"path":"/reference/PolarVolume-class.html","id":null,"dir":"Reference","previous_headings":"","what":"PolarVolume — PolarVolume-class","title":"PolarVolume — PolarVolume-class","text":"polar volume object defined RAVE. Rcpp PolarVolume class polar volume","code":""},{"path":"/reference/RaveIO-class.html","id":null,"dir":"Reference","previous_headings":"","what":"RaveIO routines — RaveIO-class","title":"RaveIO routines — RaveIO-class","text":"Provides /O routines using rave framework Rcpp RaveIO class Used loading saving objects","code":""},{"path":"/reference/Vol2Bird-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Vol2Bird processor class — Vol2Bird-class","title":"Vol2Bird processor class — Vol2Bird-class","text":"vol2bird processing class. Provides methods processing polar volumes/scans. Rcpp vol2bird processing class.","code":""},{"path":[]},{"path":"/reference/Vol2Bird.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate a vertical profile (vp) from a polar volume (pvol) file — vol2bird","title":"Calculate a vertical profile (vp) from a polar volume (pvol) file — vol2bird","text":"Calculates vertical profile biological scatterers (vp) polar volume (pvol) file using algorithm vol2bird (Dokter et al. 2011 doi: 10.1098/rsif.2010.0116 ).","code":""},{"path":"/reference/Vol2Bird.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate a vertical profile (vp) from a polar volume (pvol) file — vol2bird","text":"","code":"vol2bird(   file,   config,   vpfile = \"\",   pvolfile_out = \"\",   verbose = TRUE,   return_config = FALSE )"},{"path":"/reference/Vol2Bird.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate a vertical profile (vp) from a polar volume (pvol) file — vol2bird","text":"file Character (vector). Either path single radar polar volume (pvol) file containing multiple scans/sweeps, multiple paths scan files containing single scan/sweep. file data format either 1) ODIM format, implementation OPERA data information model HDF5 format, 2) NEXRAD format supported RSL library 3) Vaisala IRIS (IRIS RAW) format. config optional configuration object class Rcpp_Vol2BirdConfig, typically output vol2bird_config vpfile Character. File name. provided, writes vertical profile file (vpfile) ODIM HDF5 format disk. pvolfile_out Character. File name. provided, writes polar volume (pvol) file ODIM HDF5 format disk. Useful converting RSL formats ODIM, adding MistNet segmentation output. verbose logical. TRUE print profile output console. return_config logical. TRUE processing options determined based input file characteristics returned updated object specified config argument. set TRUE vol2bird() used loops like lapply() parallel processes.","code":""},{"path":[]},{"path":"/reference/Vol2BirdConfig-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Vol2Bird configuration — Vol2BirdConfig-class","title":"Vol2Bird configuration — Vol2BirdConfig-class","text":"vol2bird configuration used processing Rcpp vol2bird configuration class. Configuration instance used processing data.","code":""},{"path":[]},{"path":"/reference/branch.html","id":null,"dir":"Reference","previous_headings":"","what":"The default branch — branch","title":"The default branch — branch","text":"default branch","code":""},{"path":"/reference/branch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The default branch — branch","text":"","code":"branch"},{"path":"/reference/branch.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The default branch — branch","text":"object class character length 1.","code":""},{"path":"/reference/cpp_mistnet_init.html","id":null,"dir":"Reference","previous_headings":"","what":"Initializes the mistnet shared library pointed to by the path — cpp_mistnet_init","title":"Initializes the mistnet shared library pointed to by the path — cpp_mistnet_init","text":"Initializes mistnet shared library pointed path","code":""},{"path":"/reference/cpp_mistnet_init.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initializes the mistnet shared library pointed to by the path — cpp_mistnet_init","text":"","code":"cpp_mistnet_init(path)"},{"path":"/reference/cpp_mistnet_init.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initializes the mistnet shared library pointed to by the path — cpp_mistnet_init","text":"path shared library","code":""},{"path":"/reference/cpp_vol2bird_get_wsr88d_site_location.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns the wsr88d site location file — cpp_vol2bird_get_wsr88d_site_location","title":"Returns the wsr88d site location file — cpp_vol2bird_get_wsr88d_site_location","text":"Returns wsr88d site location file","code":""},{"path":"/reference/cpp_vol2bird_get_wsr88d_site_location.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns the wsr88d site location file — cpp_vol2bird_get_wsr88d_site_location","text":"","code":"cpp_vol2bird_get_wsr88d_site_location()"},{"path":"/reference/cpp_vol2bird_get_wsr88d_site_location.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns the wsr88d site location file — cpp_vol2bird_get_wsr88d_site_location","text":"location site location file","code":""},{"path":"/reference/cpp_vol2bird_initialize.html","id":null,"dir":"Reference","previous_headings":"","what":"Initializes the vol2birdR library — cpp_vol2bird_initialize","title":"Initializes the vol2birdR library — cpp_vol2bird_initialize","text":"Initializes vol2birdR library","code":""},{"path":"/reference/cpp_vol2bird_initialize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initializes the vol2birdR library — cpp_vol2bird_initialize","text":"","code":"cpp_vol2bird_initialize()"},{"path":"/reference/cpp_vol2bird_namespace__store_main_thread_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Sets the main thread id — cpp_vol2bird_namespace__store_main_thread_id","title":"Sets the main thread id — cpp_vol2bird_namespace__store_main_thread_id","text":"Sets main thread id","code":""},{"path":"/reference/cpp_vol2bird_namespace__store_main_thread_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sets the main thread id — cpp_vol2bird_namespace__store_main_thread_id","text":"","code":"cpp_vol2bird_namespace__store_main_thread_id()"},{"path":"/reference/cpp_vol2bird_set_wsr88d_site_location.html","id":null,"dir":"Reference","previous_headings":"","what":"Sets the wsr88d site location file — cpp_vol2bird_set_wsr88d_site_location","title":"Sets the wsr88d site location file — cpp_vol2bird_set_wsr88d_site_location","text":"Sets wsr88d site location file","code":""},{"path":"/reference/cpp_vol2bird_set_wsr88d_site_location.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sets the wsr88d site location file — cpp_vol2bird_set_wsr88d_site_location","text":"","code":"cpp_vol2bird_set_wsr88d_site_location(loc)"},{"path":"/reference/cpp_vol2bird_set_wsr88d_site_location.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sets the wsr88d site location file — cpp_vol2bird_set_wsr88d_site_location","text":"loc location file","code":""},{"path":"/reference/get_install_urls.html","id":null,"dir":"Reference","previous_headings":"","what":"List of files to download — get_install_urls","title":"List of files to download — get_install_urls","text":"List Torch mistnet files download local files order proceed install_mistnet_from_file(). See install_mistnet_from_file() example usage.","code":""},{"path":"/reference/get_install_urls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of files to download — get_install_urls","text":"","code":"get_install_urls(version = \"1.10.2\", type = install_type(version = version))"},{"path":"/reference/get_install_urls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List of files to download — get_install_urls","text":"version Torch version install. type installation type Torch. Valid values currently \"cpu\".","code":""},{"path":[]},{"path":"/reference/install_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Contains a list of mistnet libraries for the various OS's — install_config","title":"Contains a list of mistnet libraries for the various OS's — install_config","text":"Contains list mistnet libraries various OS's","code":""},{"path":"/reference/install_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Contains a list of mistnet libraries for the various OS's — install_config","text":"","code":"install_config"},{"path":"/reference/install_config.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Contains a list of mistnet libraries for the various OS's — install_config","text":"object class list length 1.","code":""},{"path":"/reference/install_mistnet.html","id":null,"dir":"Reference","previous_headings":"","what":"Install MistNet libraries — install_mistnet","title":"Install MistNet libraries — install_mistnet","text":"Installs MistNet libraries dependencies.","code":""},{"path":"/reference/install_mistnet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Install MistNet libraries — install_mistnet","text":"","code":"install_mistnet(   version = \"1.10.2\",   reinstall = FALSE,   path = install_path(),   timeout = 360,   ... )"},{"path":"/reference/install_mistnet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Install MistNet libraries — install_mistnet","text":"version MistNet version install. reinstall Re-install MistNet even already installed? path Optional path install check already existing installation. timeout Optional timeout seconds large file download. ... optional arguments (like `load` manual installation).","code":""},{"path":"/reference/install_mistnet.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Install MistNet libraries — install_mistnet","text":"using path install specific location, make sure MISTNET_HOME environment variable set path reuse installation. TORCH_INSTALL environment variable can set 0 prevent auto-installing torch TORCH_LOAD set 0 avoid loading dependencies automatically. environment variables meant advanced use cases troubleshooting . timeout error occurs library archive download, length downloaded files differ reported length, increase timeout value help.","code":""},{"path":"/reference/install_mistnet_from_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Install MistNet libraries from files — install_mistnet_from_file","title":"Install MistNet libraries from files — install_mistnet_from_file","text":"Installs Torch MistNet dependencies files.","code":""},{"path":"/reference/install_mistnet_from_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Install MistNet libraries from files — install_mistnet_from_file","text":"","code":"install_mistnet_from_file(   version = \"1.10.2\",   libtorch,   libmistnet,   mistnet_model = NULL,   ... )"},{"path":"/reference/install_mistnet_from_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Install MistNet libraries from files — install_mistnet_from_file","text":"version Torch version install. libtorch installation archive file use Torch. Shall \"file://\" URL scheme. libmistnet installation archive file use MistNet. Shall \"file://\" URL scheme. mistnet_model installation archive file use model. Shall \"file://\" URL scheme. optional! ... parameters passed install_torch()","code":""},{"path":"/reference/install_mistnet_from_file.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Install MistNet libraries from files — install_mistnet_from_file","text":"install_mistnet() initiated download possible, installation archive files present local filesystem, install_mistnet_from_file() can used workaround installation issue. \"libtorch\" archive containing torch modules, \"libmistnet\" C interface libtorch used R package. highly dependent, checked get_install_urls()   terminal, download zip-files.   R, type:","code":"> get_install_urls() $libtorch [1] \"https://download.pytorch.org/libtorch/cpu/libtorch-cxx11-abi-shared-with-deps-1.10.2%2Bcpu.zip\"  $libmistnet [1] \"https://s3.amazonaws.com/vol2bird-builds/vol2birdr/refs/heads/main/latest/Linux-cpu.zip\"  $mistnet_model [1] \"http://mistnet.s3.amazonaws.com/mistnet_nexrad.pt\" %> mkdir /tmp/myfiles %> cd /tmp/myfiles %> wget https://download.pytorch.org/libtorch/cpu/libtorch-cxx11-abi-shared-with-deps-1.10.2%2Bcpu.zip %> wget https://s3.amazonaws.com/vol2bird-builds/vol2birdr/refs/heads/main/latest/Linux-cpu.zip %> wget http://mistnet.s3.amazonaws.com/mistnet_nexrad.pt > install_mistnet_from_file(libtorch=\"file:///tmp/myfiles/libtorch-cxx11-abi-shared-with-deps-1.10.2+cpu.zip\",       libmistnet=\"file:///tmp/myfiles/Linux-cpu.zip\",      mistnet_model=\"file:///tmp/myfiles/mistnet_nexrad.pt\")"},{"path":"/reference/install_mistnet_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Install MistNet model file — install_mistnet_model","title":"Install MistNet model file — install_mistnet_model","text":"Installs PyTorch mistnet model file","code":""},{"path":"/reference/install_mistnet_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Install MistNet model file — install_mistnet_model","text":"","code":"install_mistnet_model(   reinstall = FALSE,   path = install_path(),   timeout = 1800,   from_url = \"http://mistnet.s3.amazonaws.com/mistnet_nexrad.pt\",   ... )"},{"path":"/reference/install_mistnet_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Install MistNet model file — install_mistnet_model","text":"reinstall Re-install model even already installed path Optional path install check already existing installation. timeout Optional timeout seconds large file download. from_url mistnet model file downloaded. ... optional arguments (like `load` manual installation).","code":""},{"path":"/reference/install_mistnet_model.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Install MistNet model file — install_mistnet_model","text":"Used download install mistnet model file","code":""},{"path":"/reference/install_os.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns the system name — install_os","title":"Returns the system name — install_os","text":"Returns system name","code":""},{"path":"/reference/install_os.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns the system name — install_os","text":"","code":"install_os()"},{"path":"/reference/install_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns the path of the mistnet libraries for specified version — install_path","title":"Returns the path of the mistnet libraries for specified version — install_path","text":"Returns path mistnet libraries specified version","code":""},{"path":"/reference/install_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns the path of the mistnet libraries for specified version — install_path","text":"","code":"install_path(version = \"1.0\")"},{"path":"/reference/install_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns the path of the mistnet libraries for specified version — install_path","text":"version MistNet version checked ","code":""},{"path":"/reference/install_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns the path of the mistnet libraries for specified version — install_path","text":"path libraries","code":""},{"path":"/reference/install_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns the Torch install type — install_type","title":"Returns the Torch install type — install_type","text":"Returns Torch install type","code":""},{"path":"/reference/install_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns the Torch install type — install_type","text":"","code":"install_type(version)"},{"path":"/reference/lib_installed.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns the path of the mistnet libraries for specified version — lib_installed","title":"Returns the path of the mistnet libraries for specified version — lib_installed","text":"Returns path mistnet libraries specified version","code":""},{"path":"/reference/lib_installed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns the path of the mistnet libraries for specified version — lib_installed","text":"","code":"lib_installed(library_name, install_path)"},{"path":"/reference/lib_installed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns the path of the mistnet libraries for specified version — lib_installed","text":"library_name name library searched , either libmistnet libtorch install_path location look libraries","code":""},{"path":"/reference/lib_installed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns the path of the mistnet libraries for specified version — lib_installed","text":"anything located ","code":""},{"path":"/reference/mistnet_default.html","id":null,"dir":"Reference","previous_headings":"","what":"The default mistnet version — mistnet_default","title":"The default mistnet version — mistnet_default","text":"default mistnet version","code":""},{"path":"/reference/mistnet_default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The default mistnet version — mistnet_default","text":"","code":"mistnet_default()"},{"path":"/reference/mistnet_default.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The default mistnet version — mistnet_default","text":"default mistnet version","code":""},{"path":"/reference/mistnet_exists.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks if the torch and mistnet libraries have been installed or not. — mistnet_exists","title":"Checks if the torch and mistnet libraries have been installed or not. — mistnet_exists","text":"Checks torch mistnet libraries installed .","code":""},{"path":"/reference/mistnet_exists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks if the torch and mistnet libraries have been installed or not. — mistnet_exists","text":"","code":"mistnet_exists()"},{"path":"/reference/mistnet_exists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks if the torch and mistnet libraries have been installed or not. — mistnet_exists","text":"TRUE torch mistnet libraries can found, otherwise FALSE","code":""},{"path":"/reference/mistnet_install_lib.html","id":null,"dir":"Reference","previous_headings":"","what":"Installs the library — mistnet_install_lib","title":"Installs the library — mistnet_install_lib","text":"Installs library","code":""},{"path":"/reference/mistnet_install_lib.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Installs the library — mistnet_install_lib","text":"","code":"mistnet_install_lib(   library_name,   library_url,   install_path,   source_path,   filter,   md5hash,   inst_path )"},{"path":"/reference/mistnet_install_lib.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Installs the library — mistnet_install_lib","text":"library_name name library searched , either libmistnet libtorch library_url fetch library install_path put library source_path library fetched somewhere else filter used md5hash MD5 check inst_path inst path","code":""},{"path":"/reference/mistnet_install_lib.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Installs the library — mistnet_install_lib","text":"anything located ","code":""},{"path":"/reference/mistnet_install_libs.html","id":null,"dir":"Reference","previous_headings":"","what":"Installs the mistnet libraries — mistnet_install_libs","title":"Installs the mistnet libraries — mistnet_install_libs","text":"Installs mistnet libraries","code":""},{"path":"/reference/mistnet_install_libs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Installs the mistnet libraries — mistnet_install_libs","text":"","code":"mistnet_install_libs(version, type, install_path, install_config)"},{"path":"/reference/mistnet_install_libs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Installs the mistnet libraries — mistnet_install_libs","text":"version version install type type libraries installed install_path libraries installed install_config library config","code":""},{"path":"/reference/mistnet_start.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize the mistnet system if enabled. — mistnet_start","title":"Initialize the mistnet system if enabled. — mistnet_start","text":"Initialize mistnet system enabled.","code":""},{"path":"/reference/mistnet_start.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize the mistnet system if enabled. — mistnet_start","text":"","code":"mistnet_start(version = mistnet_default(), reload = FALSE)"},{"path":"/reference/mistnet_start.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize the mistnet system if enabled. — mistnet_start","text":"version version mistnet library reload mistnet library reloaded , default FALSE.","code":""},{"path":"/reference/nexrad_station_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve or set the nexrad location file — nexrad_station_file","title":"Retrieve or set the nexrad location file — nexrad_station_file","text":"Retreives sets path RSL nexrad location file","code":""},{"path":"/reference/nexrad_station_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve or set the nexrad location file — nexrad_station_file","text":"","code":"nexrad_station_file(file)"},{"path":"/reference/nexrad_station_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve or set the nexrad location file — nexrad_station_file","text":"file string containing path location file. specify retrieve path current location file.","code":""},{"path":"/reference/nexrad_station_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve or set the nexrad location file — nexrad_station_file","text":"path nexrad location file","code":""},{"path":"/reference/nexrad_station_file.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve or set the nexrad location file — nexrad_station_file","text":"RSL library stores locations names NEXRAD stations fixed-width text file. function retrieves path location file, allows one set path different location file.","code":""},{"path":"/reference/nexrad_station_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve or set the nexrad location file — nexrad_station_file","text":"","code":"# return current location file nexrad_station_file() #> [1] \"/private/var/folders/c2/7_7qg3r93993m4kk3kjqgj2n76h_tn/T/Rtmpe3Bg3a/temp_libpath87d456671037/vol2birdR/librsl/wsr88d_locations.dat\" # set new location location file if (FALSE) { nexrad_station_file(\"/path/to/my/station_file\") }"},{"path":"/reference/rsl2odim.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a NEXRAD polar volume file to an ODIM polar volume file — rsl2odim","title":"Convert a NEXRAD polar volume file to an ODIM polar volume file — rsl2odim","text":"Convert NEXRAD polar volume file ODIM polar volume file","code":""},{"path":"/reference/rsl2odim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a NEXRAD polar volume file to an ODIM polar volume file — rsl2odim","text":"","code":"rsl2odim(   file,   config,   pvolfile_out = \"\",   verbose = TRUE,   return_config = FALSE )"},{"path":"/reference/rsl2odim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a NEXRAD polar volume file to an ODIM polar volume file — rsl2odim","text":"file Character (vector). Either path single radar polar volume (pvol) file containing multiple scans/sweeps, multiple paths scan files containing single scan/sweep. file data format either 1) ODIM format, implementation OPERA data information model HDF5 format, 2) NEXRAD format supported RSL library 3) Vaisala IRIS (IRIS RAW) format. config optional configuration object class Rcpp_Vol2BirdConfig, typically output vol2bird_config pvolfile_out Character. File name. provided, writes polar volume (pvol) file ODIM HDF5 format disk. Useful converting RSL formats ODIM, adding MistNet segmentation output. verbose logical. TRUE print profile output console. return_config logical. TRUE processing options determined based input file characteristics returned updated object specified config argument. set TRUE vol2bird() used loops like lapply() parallel processes.","code":""},{"path":[]},{"path":"/reference/torch_install_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns the torch installation path. — torch_install_path","title":"Returns the torch installation path. — torch_install_path","text":"Returns torch installation path.","code":""},{"path":"/reference/torch_install_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns the torch installation path. — torch_install_path","text":"","code":"torch_install_path()"},{"path":"/reference/vol2birdR-package.html","id":null,"dir":"Reference","previous_headings":"","what":"vol2birdR: Vertical Profiles of Biological Signals in Weather Radar Data — vol2birdR-package","title":"vol2birdR: Vertical Profiles of Biological Signals in Weather Radar Data — vol2birdR-package","text":"R implementation vol2bird software generating vertical profiles     birds biological signals weather radar data. See doi: 10.1098/rsif.2010.0116      paper describing methodology.","code":""},{"path":"/reference/vol2birdR-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"vol2birdR: Vertical Profiles of Biological Signals in Weather Radar Data — vol2birdR-package","text":"get started, see: Dokter et al. (2016) doi: 10.1098/rsif.2010.0116 : paper describing profiling algorithm. vol2bird C code documentation: overview algorithm structure. Lin T-Y et al. (2019) doi: 10.1111/2041-210X.13280 : paper describing MistNet model rain segmentation.","code":""},{"path":[]},{"path":"/reference/vol2birdR-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"vol2birdR: Vertical Profiles of Biological Signals in Weather Radar Data — vol2birdR-package","text":"Maintainer: Adriaan M. Dokter amd427@cornell.edu (ORCID) Authors: Anders Henja anders.henja@gmail.com","code":""},{"path":"/reference/vol2bird_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a vol2bird configuration instance — vol2bird_config","title":"Create a vol2bird configuration instance — vol2bird_config","text":"Creates copies vol2bird configuration instance class Rcpp_Vol2BirdConfig","code":""},{"path":"/reference/vol2bird_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a vol2bird configuration instance — vol2bird_config","text":"","code":"vol2bird_config(config)"},{"path":"/reference/vol2bird_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a vol2bird configuration instance — vol2bird_config","text":"config configuration instance copied.","code":""},{"path":"/reference/vol2bird_config.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a vol2bird configuration instance — vol2bird_config","text":"object class Rcpp_Vol2BirdConfig","code":""},{"path":[]},{"path":"/reference/vol2bird_config.html","id":"copying-configuration-instances","dir":"Reference","previous_headings":"","what":"Copying configuration instances","title":"Create a vol2bird configuration instance — vol2bird_config","text":"processing options vol2bird() set using configuration instance class Rcpp_Vol2BirdConfig cases might necessary copy modify configuration instance, example processing polar volume files different settings. cases copy instance like:   example, config extra_config instances refer object. (copy reference). avoid (make copy value), use:","code":"config<-vol2bird_config() extra_config<-config config<-vol2bird_config() # create a copy identical to object config: extra_config<-vol2bird_config(config)"},{"path":"/reference/vol2bird_config.html","id":"user-configuration-options","dir":"Reference","previous_headings":"","what":"User configuration options","title":"Create a vol2bird configuration instance — vol2bird_config","text":"Rcpp_Vol2BirdConfig class object sets following vol2bird processing options: azimMax: Numeric. minimum azimuth (0-360 degrees) used constructing bird density profile azimMin: Numeric. maximum azimuth (0-360 degrees) used constructing bird density profile birdRadarCrossSection: Numeric. Radar cross section cm^2 clutterMap: Character. clutter map path filename clutterValueMin: Numeric. sample volumes static cluttermap value threshold considered clutter-contaminated. Default 0.1 dbzType: Character. Reflectivity factor quantity use. Default DBZH dualPol: Logical. Whether use dual-pol moments filtering meteorological echoes. Default TRUE elevMax: Numeric. minimum scan elevation degrees used constructing bird density profile elevMin: Numeric. maximum scan elevation degrees used constructing bird density profile layerThickness: Numeric. width/thickness altitude layer m. Default 200 mistNetPath: Character. Path mistnet segmentation model pytorch (.pt) format nLayers: Integer. number layers altitude profile. Default 25 radarWavelength: Numeric. radar wavelength cm assume unavailable attribute input file. Default 5.3 rangeMax: Numeric. maximum range m used constructing bird density profile. Default 35000 rangeMin: Numeric. minimum range m used constructing bird density profile. Default 5000 rhohvThresMin: Numeric. Correlation coefficients higher threshold classified precipitation. Default 0.95 singlePol: Logical. Whether use single-pol moments filtering meteorological echoes. Default TRUE stdDevMinBird: Numeric. VVP Radial velocity standard deviation threshold. Default 2 m/s. useClutterMap: Logical. Whether use static clutter map. Default FALSE useMistNet: Logical. Whether use MistNet segmentation model. Default FALSE.","code":""},{"path":"/reference/vol2bird_config.html","id":"advanced-configuration-options","dir":"Reference","previous_headings":"","what":"Advanced configuration options","title":"Create a vol2bird configuration instance — vol2bird_config","text":"Changing settings rarely needed. cellEtaMin:  Numeric. Maximum mean reflectivity cm^2/km^3 cells containing birds cellStdDevMax: Numeric. analyzing precipitation cells, cells stddev vrad (aka texture) less cellStdDevMax considered rest analysis dbzThresMin: Numeric. Minimum reflectivity factor gate considered inclusion weather cell. Default 0 dBZ dealiasRecycle: Logical. Whether dealias data (default TRUE), dealias profile individually (FALSE) dealiasVrad: Logical. Whether dealias radial velocities. Default TRUE. etaMax: Numeric. Maximum reflectivity cm^2/km^3 single gates containing birds. Default 36000 exportBirdProfileAsJSONVar: Logical. Deprecated, use. Default FALSE fitVrad: Logical. Whether fit model observed vrad. Default TRUE maxNyquistDealias: Numeric. scans nyquist velocity higher value, dealiasing suppressed. Default 25 m/s. minNyquist: Numeric. Scans Nyquist velocity lower value excluded. Default 5 m/s. mistNetElevs: Numeric vector length 5. Elevations use Cartesian projection MistNet. Default c(0.5, 1.5, 2.5, 3.5, 4.5) mistNetElevsOnly: Logical. TRUE (default), use specified elevation scans mistnet calculate profile, otherwise use available elevation scans requireVrad: Logical. range gate contribute valid radial velocity. Default FALSE resample: Logical. Whether resample input polar volume. Downsampling speeds calculation. Default FALSE resampleNbins: Numeric. Resampled number range bins. Ignored resample FALSE. Default 100 resampleNrays: Numeric. Resampled number azimuth bins. Ignored resample FALSE. Default 360 resampleRscale: Numeric. Resampled range gate length m. Ignored resample FALSE. Default 500 m.","code":""},{"path":"/reference/vol2bird_config.html","id":"algorithm-constants","dir":"Reference","previous_headings":"","what":"Algorithm constants","title":"Create a vol2bird configuration instance — vol2bird_config","text":"Changing constants recommended constant_absVDifMax: Numeric. fitting radial velocity data, throw VRAD observations absVDifMax away fitted value outliers. Default 10 constant_areaCellMin: Numeric. analyzing cells, areaCellMin determines minimum size cell considered rest analysis. km^2. Default 0.5 constant_cellClutterFractionMax: Cells clutter fractions value likely birds. Default 0.5 constant_chisqMin: Minimum standard deviation VVP fit. Default 1e-05 constant_fringeDist: identified weather cell grown distance equal 'fringeDist' using region-growing approach. Default 5000 constant_nAzimNeighborhood: vrad's texture calculated based local neighborhood. neighborhood size azimuth direction equal value. Default 3 constant_nBinsGap: determining whether enough vrad observations direction, use nBinsGap sectors. Default 8 constant_nCountMin: minimum number neighbors texture value considered valid, used calcTexture(). Default 4 constant_nNeighborsMin: minimum number direct neighbors dbz value dbzThresMin used findWeatherCells(). Default 5 constant_nObsGapMin: least many vrad observations sector. Default 5 constant_nPointsIncludedMin: calculating altitude-layer averaged dbz, least many valid data points. Default 25 constant_nRangNeighborhood: vrad's texture calculated based local neighborhood. neighborhood size range direction equal value. Default 3 constant_refracIndex: Refractive index scatterers. Default equal water 0.964 constant_vradMin: analyzing cells, radial velocities lower vradMin treated clutter. Default 1 m/s.","code":""},{"path":"/reference/vol2bird_config.html","id":"debug-printing-options","dir":"Reference","previous_headings":"","what":"Debug printing options","title":"Create a vol2bird configuration instance — vol2bird_config","text":"Enable printing options debugging purposes terminal, since large amounts data dumped console. printCell: Logical. Print precipitation cell data stderr. Default FALSE printCellProp: Logical. Print precipitaion cell properties stderr. Default FALSE printClut: Logical. Print clutter data stderr. Default FALSE printDbz: Logical. Print reflectivity factor data stderr. Default FALSE printDealias: Logical. FALSE printOptions: Logical. Print options stderr. Default FALSE printPointsArray: Logical. Print 'points' array stderr. Default FALSE printProfileVar: Logical. Print profile data stderr. Default FALSE printRhohv: Logical. Print correlation coefficient data stderr. Default FALSE printTex: Logical. Print radial velocity texture data stderr. Default FALSE printVrad: Logical. Print radial velocity data stderr. Default FALSE","code":""},{"path":[]},{"path":"/reference/vol2bird_config.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a vol2bird configuration instance — vol2bird_config","text":"","code":"# create a configuration instance config <- vol2bird_config() # list the the configuration elements: config #> vol2bird configuration: #>  $ azimMax                        : num 360 #>  $ azimMin                        : num 0 #>  $ birdRadarCrossSection          : num 11 #>  $ cellEtaMin                     : num 11500 #>  $ cellStdDevMax                  : num 5 #>  $ clutterMap                     : chr \"\" #>  $ clutterValueMin                : num 0.1 #>  $ dbzThresMin                    : num 0 #>  $ dbzType                        : chr \"DBZH\" #>  $ dealiasRecycle                 : logi TRUE #>  $ dealiasVrad                    : logi TRUE #>  $ dualPol                        : logi TRUE #>  $ elevMax                        : num 90 #>  $ elevMin                        : num 0 #>  $ etaMax                         : num 36000 #>  $ exportBirdProfileAsJSONVar     : logi FALSE #>  $ fitVrad                        : logi TRUE #>  $ layerThickness                 : num 200 #>  $ maxNyquistDealias              : num 25 #>  $ minNyquist                     : num 5 #>  $ mistNetElevs                   : num [1:5] 0.5 1.5 2.5 3.5 4.5 #>  $ mistNetElevsOnly               : logi TRUE #>  $ mistNetPath                    : chr \"/private/var/folders/c2/7_7qg3r93993m4kk3kjqgj2n76h_tn/T/Rtmpe3Bg3a/temp_libpath87d456671037/vol2birdR/data/mistnet_nexrad.pt\" #>  $ nLayers                        : int 25 #>  $ radarWavelength                : num 5.3 #>  $ rangeMax                       : num 35000 #>  $ rangeMin                       : num 5000 #>  $ requireVrad                    : logi FALSE #>  $ resample                       : logi FALSE #>  $ resampleNbins                  : int 100 #>  $ resampleNrays                  : int 360 #>  $ resampleRscale                 : num 500 #>  $ rhohvThresMin                  : num 0.95 #>  $ singlePol                      : logi TRUE #>  $ stdDevMinBird                  : num 2 #>  $ useClutterMap                  : logi FALSE #>  $ useMistNet                     : logi FALSE # change the maximum range included in the profile generation to 40 km: config$rangeMax <- 40000 # make a copy of the configuration instance: config_copy <- vol2bird_config(config)"}]
